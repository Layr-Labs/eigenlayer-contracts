.
└── BN254TableCalculatorBase (**** denotes that integration tests are needed to fully validate path)
    ├── when calculateOperatorTable is called
    │   ├── given that there are no operators
    │   │   └── it should return empty operator table with zero aggregate pubkey
    │   ├── given that operators have no registered BN254 keys
    │   │   └── it should skip those operators and return table without them
    │   ├── given that all operators have registered BN254 keys
    │   │   └── it should include all operators in the table and calculate aggregate pubkey
    │   ├── given that weights array has multiple weight types
    │   │   └── it should correctly sum all weight types in totalWeights
    │   └── given that operators have mixed registration status
    │       └── it should only include registered operators in calculations
    ├── when calculateOperatorTableBytes is called
    │   └── it should return the encoded bytes of the operator table
    ├── when getOperatorWeights is called
    │   └── it should return the result from _getOperatorWeights implementation
    ├── when getOperatorWeight is called
    │   ├── given that the operator exists in the set
    │   │   └── it should return the first weight value for that operator
    │   ├── given that the operator does not exist in the set
    │   │   └── it should return zero
    │   └── given that the operator exists but has empty weights
    │       └── it should handle gracefully ****
    └── when getOperatorInfos is called
        ├── given that no operators are registered
        │   └── it should return array with empty operator infos
        ├── given that some operators are not registered
        │   └── it should skip unregistered operators (leaving empty slots)
        └── given that all operators are registered
            └── it should return complete operator info for each operator 